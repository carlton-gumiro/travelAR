<!DOCTYPE html>
<html>

<head>
    <title>Travel Advisor</title>
    <link rel="stylesheet" href="styles.css">
    <style>
        #map{}
    </style>
    <script src="https://maps.googleapis.com/maps/api/js?key=<%= key %>"></script>
</head>

<body>
    <%- include('partials/navbar') %>

    <div class="container">
        <div class="sidebar">
            <h2>Places Around You</h2>
            <div class="places_container">
                <% if (places.length > 0) { %>
                    <% places.forEach((place) => { %>
                        <div class="card" data-lat="<%= place.latitude %>" data-lng="<%= place.longitude %>" data-name="<%= place.name %>">
                            <img src="<%= place.photoUrl %>" alt="<%= place.name %>" />
                            <div>
                                <h2><%= place.name %></h2>
                                <span><%= place.open_now ? 'OPEN NOW' : 'CLOSED' %></span>
                            </div>
                            <div class="rating">
                                <span>Rating: <%= (place.rating) %></span>
                                <br>
                                <span><%= place.reviews %> reviews</span>
                            </div>
                            <p>Category: <%= place.first_type %></p>
                            <p><i class="fas fa-map-marker-alt"></i><%= place.formatted_address %></p>
                            <button onclick="redirectToDirections(<%= place.latitude %>, <%= place.longitude %>, '<%= encodeURIComponent(place.name) %>')">Directions</button>
                            <button onclick="showRoute(<%= place.latitude %>, <%= place.longitude %>, '<%= encodeURIComponent(place.name) %>')">Show Route</button>
                        </div>
                    <% }); %>
                <% } else { %>
                    <p>No places found.</p>
                <% } %>
            </div>
        </div>

        <div class="map-container">
            <div id="map"></div>
        </div>
    </div>

    <script>
        let map;

        function initMap() {
            // Attempt to get the user's current location
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition((position) => {
                    const userLocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    // Initialize the map centered at the user's location
                    map = new google.maps.Map(document.getElementById('map'), {
                        zoom: 14,
                        center: userLocation,
                        disableDefaultUI: true
                    });

                    // Add a marker for the user's location
                    new google.maps.Marker({
                        position: userLocation,
                        map: map,
                        title: "You are here"
                    });

                    // Place markers for each place passed from the backend
                    const places = <%- JSON.stringify(places) %>; // Pass places as a JSON string
                    places.forEach((place) => {
                        const marker = new google.maps.Marker({
                            position: { lat: place.latitude, lng: place.longitude },
                            map: map,
                            title: place.name,
                            icon: { url: "http://maps.google.com/mapfiles/ms/icons/blue-dot.png" }
                        });

                        const contentString = `
                            <h3>${place.name}</h3>
                            <p>${place.formatted_address}</p>
                            <p>Rating: ${generateStarRating(place.rating)}</p>
                        `;

                        const infowindow = new google.maps.InfoWindow({
                            content: contentString
                        });

                        marker.addListener('click', () => {
                            infowindow.open(map, marker);
                        });
                    });

                }, () => {
                    handleLocationError(true);
                });
            } else {
                // Browser doesn't support geolocation
                handleLocationError(false);
            }
        }

        function handleLocationError(browserHasGeolocation) {
            const defaultLocation = { lat: -17.8292, lng: 31.0522 }; // Fallback location (Harare)
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 14,
                center: defaultLocation,
                disableDefaultUI: true
            });
            alert(browserHasGeolocation ?
                "Error: The Geolocation service has failed." :
                "Error: Your browser doesn't support geolocation.");
        }

        function redirectToDirections(latitude, longitude, name) {
            const url = `/directions?latitude=${latitude}&longitude=${longitude}&name=${name}`;
            window.location.href = url; // Redirect to the URL
        }

        function showRoute(latitude, longitude, name) {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition((position) => {
                    const myLatitude = position.coords.latitude;
                    const myLongitude = position.coords.longitude;

                    const url = `/route?latitude=${latitude}&longitude=${longitude}&mylatitude=${myLatitude}&mylongitude=${myLongitude}&name=${encodeURIComponent(name)}`;
                    window.location.href = url; // Redirect to the URL
                }, (error) => {
                    alert("Unable to retrieve your location. Please check your location settings.");
                });
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        }

        function generateStarRating(rating) {
            let stars = '';
            for (let i = 1; i <= 5; i++) {
                stars += (i <= rating) ? '★' : '☆'; // Filled or empty star
            }
            return stars;
        }

        // Initialize the map when the window loads
        window.onload = initMap;
    </script>
</body>

</html>